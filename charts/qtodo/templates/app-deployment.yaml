apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '20'
  labels:
    app: qtodo
  name: qtodo
  namespace: qtodo
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      deployment: qtodo
  template:
    metadata:
      annotations:
        checksum/app-configmap-envvars: {{ include (print $.Template.BasePath "/app-config-env.yaml") . | sha256sum }}
{{- if eq .Values.app.spire.enabled true }}
        checksum/app-spiffe-helper-config: {{ include (print $.Template.BasePath "/spiffe-helper-config.yaml") . | sha256sum }}
{{- end }}
      labels:
        app: qtodo
        deployment: qtodo
      name: qtodo
    spec:
      containers:
{{- if eq .Values.app.spire.enabled true }}
      - name: spiffe-helper
        image: 'ghcr.io/spiffe/spiffe-helper:0.10.1'
        args:
          - '-config'
          - /etc/helper.conf
        resources: {}
        volumeMounts:
          - name: spiffe-helper-config
            readOnly: true
            mountPath: /etc/helper.conf
            subPath: helper.conf
          - name: spiffe-workload-api
            readOnly: true
            mountPath: /spiffe-workload-api
          - name: svids
            mountPath: /svids
{{- end }}
      - name: qtodo
        image: quay.io/hybridcloudpatterns/qtodo:latest
        # Modified to Always to force a pull so we can test changes to the container image without requiring manual deletion of images or restarts of argo
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        envFrom:
          - configMapRef:
              name: qtodo-config-env
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: QUARKUS_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgresql.auth.secretName }}
              key: username
        - name: QUARKUS_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgresql.auth.secretName }}
              key: password
        - name: QUARKUS_DATASOURCE_JDBC_URL
          value: 'jdbc:postgresql://qtodo-db:5432/{{ .Values.postgresql.auth.database }}'
        - name: QUARKUS_HTTP_HOST
          value: '0.0.0.0'
        - name: QUARKUS_HTTP_PORT
          value: '8080'
        - name: QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION
          value: 'drop-and-create'
{{- if eq .Values.app.spire.enabled true }}
        volumeMounts:
          - name: svids
            mountPath: /svids
{{- end }}
        resources: {}
      serviceAccountName: qtodo
{{- if eq .Values.app.spire.enabled true }}
      volumes:
        - name: spiffe-helper-config
          configMap:
            name: spiffe-helper
            defaultMode: 420
        - name: svids
          emptyDir: {}
        - name: spiffe-workload-api
          csi:
            driver: csi.spiffe.io
            readOnly: true
{{- end }}